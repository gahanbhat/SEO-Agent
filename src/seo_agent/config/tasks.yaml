backlink_task:
  description: >
    Use SEMrush to find backlink opportunities and analyze competitors.
  expected_output: >
    A report detailing backlink opportunities and competitive analysis.
  tools:
    - semrush_tool
  agent: backlink_agent

content_creation_tasks:
  - description: >
      Scrape the {client} website for category page data and store in the database.
    expected_output: >
      Database updated with category page data.
    agent: content_agents[0]
    tools:
      - ScrapeWebsiteTool
      - StoreInDatabaseTool
    args:
      ScrapeWebsiteTool:
        url: "{client_category_page_url}"
      StoreInDatabaseTool:
        content_type: "category"
        data: "{scrape_client_website.result}"

  - description: >
      Scrape the {client}  website for product reviews and store in the database.
    expected_output: >
      Database updated with product review data.
    agent: content_agents[1]
    tools:
      - ScrapeWebsiteTool
      - StoreInDatabaseTool
    args:
      ScrapeWebsiteTool:
        url: "{client_product_review_page_url}"
      StoreInDatabaseTool:
        content_type: "product_review"
        data: "{scrape_client_website.result}"

  - description: >
      Scrape the {client} website for product descriptions and store in the database.
    expected_output: >
      Database updated with product description data.
    agent: content_agents[2]
    tools:
      - ScrapeWebsiteTool
      - StoreInDatabaseTool
    args:
      ScrapeWebsiteTool:
        url: "{client_product_description_page_url}"
      StoreInDatabaseTool:
        content_type: "product_description"
        data: "{scrape_client_website.result}"

  - description: >
      Scrape the {client} website for landing pages and store in the database.
    expected_output: >
      Database updated with landing page data.
    agent: content_agents[3]
    tools:
      - ScrapeWebsiteTool
      - StoreInDatabaseTool
    args:
      ScrapeWebsiteTool:
        url: "{client_landing_page_url}"
      StoreInDatabaseTool:
        content_type: "landing_page"
        data: "{scrape_client_website.result}"

  - description: >
      Scrape the {client} website for team blog content and store in the database.
    expected_output: >
      Database updated with team blog data.
    agent: content_agents[4]
    tools:
      - ScrapeWebsiteTool
      - StoreInDatabaseTool
    args:
      ScrapeWebsiteTool:
        url: "{client_team_blog_page_url}"
      StoreInDatabaseTool:
        content_type: "team_blog"
        data: "{scrape_client_website.result}"

content_brief_tasks:
  - description: >
      Generate a brief for category page content.
    expected_output: >
      Brief summarizing stored category page data.
    agent: content_brief_manager
    tools:
      - FetchFromDatabaseTool
    args:
      FetchFromDatabaseTool:
        content_type: "category"

  - description: >
      Generate a brief for product review content.
    expected_output: >
      Brief summarizing stored product review data.
    agent: content_brief_manager\
    tools:
      - FetchFromDatabaseTool
    args:
      FetchFromDatabaseTool:
        content_type: "product_review"

  - description: >
      Generate a brief for product description content.
    expected_output: >
      Brief summarizing stored product description data.
    agent: content_brief_manager
    tools:
      - FetchFromDatabaseTool
    args:
      FetchFromDatabaseTool:
        content_type: "product_description"

  - description: >
      Generate a brief for landing page content.
    expected_output: >
      Brief summarizing stored landing page data.
    agent: content_brief_manager
    tools:
      - FetchFromDatabaseTool
    args:
      FetchFromDatabaseTool:
        content_type: "landing_page"

  - description: >
      Generate a brief for team blog content.
    expected_output: >
      Brief summarizing stored team blog data.
    agent: content_brief_manager
    tools:
      - FetchFromDatabaseTool
    args:
      FetchFromDatabaseTool:
        content_type: "team_blog"

content_brief_manager:
  description: >
    Manage sub content agents and ensure timely delivery to the SEO director.
  agent: content_brief_manager

research_manager:
  description: >
    Manage sub research agents and provide top articles on {competitor} {topic} {keyword} to the sub agents, take the data from the sub agents and send it to the SEO director.
  agent: research_manager
  tools:
    - WebsiteSearchTool

research_agent:
  description: >
    Scrape the website and Youtube of a given {competitor} and send the data to the research manager.
  agent: research_agent
  tools:
    - ScrapeWebsiteTool
    - YoutubeChannelSearchTool
topic_research_agent:
  description: >
    Find the top articles on {topic} and scrape them and send it to the research manager.
  agent: topic_research_agent
  tools:
    - WebsiteSearchTool
    - ScrapeWebsiteTool

seo_director_task:
  description: >
    Take the data from content brief manager and research manager and create content based on {type of post} for the website.
  expected_output: >
    Content created and published on the website.
  agent: seo_director
  tools:
    - ShopifyPostTool
